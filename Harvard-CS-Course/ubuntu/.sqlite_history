.schema
CREATE TABLE purchases (user_id INTEGER, sym TEXT NOT NULL, name 
.schema
clear
;
SELECT * FROM users
;
.schema
DROP ON users
;
DROP TABLE users;
DROP TABLE holdings;
CREATE TABLE users (id INTEGER, username TEXT NOT NULL, hash TEXT NOT NULL, cash NUMERIC NOT NULL DEFAULT 10000.00, PRIMARY KEY(id));
CREATE UNIQUE INDEX username ON users (username);
CREATE TABLE IF NOT EXISTS "holdings" (user_id INTEGER, sym TEXT NOT NULL, name TEXT, shares INTEGER NOT NULL DEFAULT 0, price FLOAT(2), total FLOAT(2), FOREIGN KEY(user_id) REFERENCES users(id));
.schema
CREATE TABLE holdings (user_id INTEGER, sym TEXT NOT NULL, name TEXT, shares INTEGER NOT NULL DEFAULT 0, price FLOAT(2), total FLOAT(2), FOREIGN KEY(user_id) REFERENCES users(id)); 
CREATE TABLE transactions (user_id INTEGER, sym TEXT NOT NULL, shares INTEGER NOT NULL, price FLOAT(2), transacted TIMESTAMP, FOREIGN KEY(user_id) REFERENCES users(id));
.schema
clear
;
SELECT * FROM users WHERE username = "Nico";
.schema
SELECT * FROM users WHERE id IN (2);
SELECT * FROM transactions;
SELECT * FROM transactions WHERE id IN (2);
SELECT * FROM transactions WHERE user_id  IN (2);
SELECT * FROM users;
SELECT name FROM songs;
.schema
SELECT AVG(energy) AS energy FROM songs;
SELECT AVG(energy) FROM songs;
SELECT * FROM songs WHERE artist_id = (SELECT id FROM artists WHERE name = 'POST MALONE');
.schema
SELECT name FROM songs WHERE artist_id = (SELECT id FROM artists WHERE name = 'Post Malone');
SELECT name FROM songs WHERE artist_id IN (SELECT id FROM artists WHERE name = 'Post Malone');
SELECT AVG(energy) FROM songs WHERE artist_id = (SELECT id FROM artists WHERE name = 'Drake');
SELECT * FROM holdings;
SELECT * FROM users;
.schema
CREATE UNIQUE INDEX sym ON transactions (sym);
CREATE UNIQUE INDEX symbol ON transactions(sym);
.schema
CREATE TABLE users (id INTEGER, username TEXT NOT NULL, hash TEXT NOT NULL, cash NUMERIC NOT NULL DEFAULT 10000.00, PRIMARY KEY(id));
CREATE UNIQUE INDEX username ON users (username);
CREATE TABLE IF NOT EXISTS "holdings" (user_id INTEGER, sym TEXT NOT NULL, name TEXT, shares INTEGER NOT NULL DEFAULT 0, price FLOAT(2), total FLOAT(2), FOREIGN KEY(user_id) REFERENCES users(id));
DROP TABLE users, transactions
;
DROP TABLE hodings;
.schema
DROP TABLE holdings.
DROP TABLE holdings
;
DROP TABLE transactions;
DROP TABLE users;
CREATE TABLE users (id INTEGER, username TEXT NOT NULL, hash TEXT NOT NULL, cash NUMERIC NOT NULL DEFAULT 10000.00, PRIMARY KEY(id));
CREATE UNIQUE INDEX username ON users (username);
CREATE TABLE transactions (user_id INTEGER, sym TEXT NOT NULL, shares INTEGER NOT NULL, price FLOAT(2), transacted TIMESTAMP, FOREIGN KEY(user_id) REFERENCES users(id));
.schema
DROP TABLE transactions;
DROP TABLE users;
CREATE TABLE users (id INTEGER, username TEXT NOT NULL, hash TEXT NOT NULL, cash NUMERIC NOT NULL DEFAULT 10000.00, PRIMARY KEY(id));
CREATE UNIQUE INDEX username ON users (username);
CREATE TABLE transactions (id INTEGER, user_id INTEGER, sym TEXT NOT NULL, shares INTEGER NOT NULL, price FLOAT(2), transacted TIMESTAMP, FOREIGN KEY(user_id) REFERENCES users(id), PRIMARY KEY(id));
.schema
ALTER TABLE table_name
.
;
ALTER TABLE users ADD symbol, shares TEXT, INTEGER;
ALTER TABLE users ADD symbol TEXT,shares INTEGER;
ALTER TABLE users ADD symbol TEXT, shares INTEGER;
ALTER TABLE users ADD UPPER(symbol) TEXT;
ALTER TABLE users ADD symbol TEXT;
ALTER TABLE users ADD shares INTEGER;
.schema
DROP TABLE users;
DROP TABLE transactions;
CREATE TABLE users (id INTEGER, username TEXT NOT NULL, hash TEXT NOT NULL, cash NUMERIC NOT NULL DEFAULT 10000.00, PRIMARY KEY(id));
CREATE UNIQUE INDEX username ON users (username);
CREATE TABLE transactions (id INTEGER, user_id INTEGER, sym TEXT NOT NULL, shares INTEGER NOT NULL, price FLOAT(2), transacted TIMESTAMP, FOREIGN KEY(user_id) REFERENCES users(id), PRIMARY KEY(id));
.schema
CREATE TABLE holdings (user_id INTEGER, symbol TEXT NOT NULL, shares INTEGER DEFAULT = 0, FOREIGN KEY(user_id) REFERENCES users(id));
CREATE TABLE holdings (user_id INTEGER, symbol TEXT NOT NULL, shares INTEGER DEFAULT 0, FOREIGN KEY(user_id) REFERENCES users(id));
clear
;
.schema
DROP TABLE users;
DROP TABLE transactions;
DROP TABLE holdings;
.schema
CREATE TABLE users (id INTEGER, username TEXT NOT NULL, hash TEXT NOT NULL, cash NUMERIC NOT NULL DEFAULT 10000.00, PRIMARY KEY(id));
CREATE UNIQUE INDEX username ON users (username);
CREATE TABLE transactions (id INTEGER, user_id INTEGER, sym TEXT NOT NULL, shares INTEGER NOT NULL, price FLOAT(2), transacted TIMESTAMP, FOREIGN KEY(user_id) REFERENCES users(id), PRIMARY KEY(id));
CREATE TABLE holdings (user_id INTEGER, symbol TEXT NOT NULL, shares INTEGER DEFAULT 0, FOREIGN KEY(user_id) REFERENCES users(id), PRIMARY KEY(id));
CREATE TABLE users (id INTEGER, username TEXT NOT NULL, hash TEXT NOT NULL, cash NUMERIC NOT NULL DEFAULT 10000.00, PRIMARY KEY(id));
CREATE UNIQUE INDEX username ON users (username);
CREATE TABLE transactions (id INTEGER, user_id INTEGER, sym TEXT NOT NULL, shares INTEGER NOT NULL, price FLOAT(2), transacted TIMESTAMP, FOREIGN KEY(user_id) REFERENCES users(id), PRIMARY KEY(id));
CREATE TABLE holdings (id, user_id INTEGER, symbol TEXT NOT NULL, shares INTEGER DEFAULT 0, FOREIGN KEY(user_id) REFERENCES users(id), PRIMARY KEY(id));
.schema

